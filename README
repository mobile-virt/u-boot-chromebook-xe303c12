This is the u-boot code forked from : 

https://github.com/virtualopensystems/u-boot/

and updated to today,with the goal to virtualize FreeBSD or Linux on the ARM Chromebook model xe303c12 
using qemu and kvm on a more recent kernel version (5.4.257) on top of an upgraded Linux distro (Devuan 5 or Ubuntu 22.04)

It works at today even if some slightly changes are needed to the source code. 

HOW TO :

1) you should clone this repository : https://github.com/mobile-virt/u-boot-chromebook-xe303c12/

2) Get Devuan 5 from here : 

https://drive.google.com/u/0/uc?id=1-obTOWKIbgRjQZDjjQazbOtPFHboeA8N&export=download
(source : https://github.com/quarkscript/linux-armv7-xe303c12-only)

unpack the zipped file and then dd the image file called : 

xe303c12_vubu_xfce_1882M_btrfs_5.15.79.img 

to a good sd card (I suggest a "SanDisk of 120 GB or more) with the following command :

# dd if=xe303c12_vubu_xfce_1882M_btrfs_5.15.79.img of=/dev/sdg

3) when the cloning process is finished,you have to mount the partition 2 with the command : 

mount -t auto /dev/sdg2 /mnt/sdg2

4) now you should copy the content of /mnt/sdg2 somewhere on the disk of your main PC with the commands : 

a) cd /mnt/sdg2
b) mkdir -p /home/user/downloads/devuan5-rootfs
c) rsync -avxHAX * /home/user/downloads/devuan5-rootfs
d) umount /mnt/sdg2

5) you should copy this file : 

https://github.com/mobile-virt/u-boot-chromebook-xe303c12/blob/chromebook/guide/nv_u-boot-snow.kpart

to this directory :

/home/user/Downloads/u-boot-chromebook/scripts

6) Now you need to properly prepare the boot medium for installing u-boot. 

In the uboot source directory:

$ sudo ./scripts/sdcard.sh /dev/sdg

This will erase all data and create 4 partitions in the medium, 
along with copying the u-boot binary to the first partition:

a) ChromeOS signed binary (our chained u-boot)
b) Partition 2 not used
c) EXT2 partition for u-boot files (uImage and exynos5250-snow.dtb)
d) EXT4 partition for userspace files

7) now mount the 4. partition with the command : mount -t auto /dev/sdg4 /mnt/sdg4

8) now you should copy the files that you have previously copied from here : 

/home/user/downloads/devuan5-rootfs 

to here : /mnt/sdg4/

using the usual rsync command : 

# cd /home/user/downloads/devuan5-rootfs
# rsync -avxHAX * /mnt/sdg4

9) get these kernel modules :

https://github.com/mobile-virt/u-boot-chromebook-xe303c12/blob/chromebook/guide/5.4.257-chromarietto-exy.tar.gz

unpack and copy the content in /mnt/sdg4/lib/modules/

10) edit the /etc/fstab file,removing everything and adding something like this :

LABEL=BOOT /boot ext4 defaults,noatime,nodiratime,errors=remount-ro 0 2
LABEL=ROOT / ext4 defaults,noatime,nodiratime,errors=remount-ro 0 1

11) umount /dev/sdg4

12) now let's prepare the appropriate kernel (not higher than 5.4,because on ARM 32 bit
kvm has been removed starting from qemu 5.2 and main line kernel 5.7,but using 5.4 is better)

13) you have to mount the partition 3 on the sdcard with the command : 

mount -t auto /dev/sdg3 /mnt/sdg3

14) get this kernel file :

https://github.com/mobile-virt/u-boot-chromebook-xe303c12/blob/chromebook/guide/uImage

15) and get this file :

https://github.com/mobile-virt/u-boot-chromebook-xe303c12/blob/chromebook/guide/exynos5250-snow.dtb

and copy them to : /mnt/sdg3

16) umount /mnt/sdg3

17) detach the sd card from your pc and insert it inside the chromebook and try to boot devuan 5.

18) let's install qemu 5.1 :

# apt install libgtk-3-dev libpulse-dev libgbm-dev libspice-protocol-dev 
libspice-server-dev libusb-1.0-0-dev libepoxy-dev libfdt-dev flex bison build-essential 
(for Debian : kconfig-frontends bc rsync libssl-dev:native) pkg-config gettext

# apt install libgtk-3-dev libpulse-dev libgbm-dev libspice-protocol-dev \
libspice-server-dev libusb-1.0-0-dev libepoxy-dev libfdt-dev

# git clone -b v5.1.0 http://git.qemu.org/qemu.git
# git submodule add -f https://git.kernel.org/pub/scm/utils/dtc/dtc.git dtc

# ./configure --disable-werror --target-list=arm-softmmu --enable-opengl --enable-gtk \
--enable-kvm --enable-guest-agent --enable-spice --audio-drv-list="oss pa" \
--enable-libusb --enable-trace-backend=simple --enable-debug

# cd qemu-v5.1.0/
# make
# make install

# which qemu-system-arm
/usr/local/bin/qemu-system-arm

# qemu-system-arm --version
QEMU emulator version 5.1.0 (v5.1.0-dirty)

19) do install these packages on the system :

linux-headers-5.4.0-162_5.4.0-162.179_all.deb
linux-image-5.4.0-162-generic_5.4.0-162.179_armhf.deb
linux-libc-dev_5.4.0-162.179_armhf.deb
linux-modules-5.4.0-162-generic_5.4.0-162.179_armhf.deb

20) lets install libvirt from source code :

# build-dep libvirt
# git clone https://github.com/libvirt/libvirt.git
# cd libvirt
# meson setup build
# ninja -C build
# sudo ninja -C build install

# which virsh
/usr/local/bin/virsh

# which libvirtd
/usr/local/sbin/libvirtd

21) let's install virt-manager

# apt install gobject-introspection libosinfo-1.0-0 libosinfo-1.0-dev gir1.2-libosinfo-1.0 
libvirt-glib-1.0-dev python3-requests libunistring-dev xsltproc libxml2-utils python3-pip 
software-properties-common python3-docutils libgmp-dev libtasn1-6-dev libpciaccess-dev 
libdevmapper-dev libnl-route-3-dev libnl-3-dev libgnutls28-dev python3-libvirt libvte-2.91-dev  
libgtksourceview-3.0-dev libgtk-vnc-2.0-dev gir1.2-gtk-vnc-2.0 python3-libxml2 

# git clone https://github.com/virt-manager/virt-manager.git
# cd virt-manager
# ./setup.py configure --prefix=/usr/local
# ./setup.py install

# libvirtd &
# virtlogd &

22) setting dnsmasq

a) apt install dnsmasq
b) nano /etc/dnsmasq.conf
c) Change port 53 -> 5353

# Listen on this specific port instead of the standard DNS port
# (53). Setting this to zero completely disables DNS function,
# leaving only DHCP and/or TFTP.
port=5353

# Set Listen address
listen-address=127.0.0.1

23) add group kvm :

# addgroup --quiet --system kvm

# adduser --quiet --system --ingroup kvm --quiet --disabled-login --disabled-password --home /var/lib/libvirt --no-create-home --gecos "Libvirt Qemu" --uid 64055 libvirt-qemu

24) check if everything is working great :

# virsh domcapabilities --machine virt --emulatorbin /usr/local/bin/qemu-system-arm

25) if you want to experiment with Xen: see https://github.com/mobile-virt/u-boot-chromebook-xe303c12/tree/chromebook/xen for more information.

# Original (C) Copyright 2000 - 2012
# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
#
# See file CREDITS for list of people who contributed to this
# project.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307 USA
